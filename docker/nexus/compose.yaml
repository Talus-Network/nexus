version: "3.8"

services:
  tools:
    container_name: tools
    image: talus-network/nexus-tools:latest
    build:
      context: "../../offchain/tools/"
      dockerfile: "${PWD:-.}/nexus/Dockerfile"
    ports:
      - "8080:8080"
    restart: unless-stopped
    environment:
      OLLAMA_HOST: http://ollama:11434
    depends_on:
      build-suitools:
        condition: service_completed_successfully
      publish-package:
        condition: service_completed_successfully
      prepare-model:
        condition: service_completed_successfully

  events:
    container_name: events
    image: talus-network/nexus-events:latest
    build:
      context: "../../offchain/"
      dockerfile: "${PWD:-.}/nexus/Dockerfile"
      args:
        INSTALL_RUST: "true"
    command: >
      bash -c "source .venv/bin/activate && python startup_events.py"
    #command: ["tail", "-f", "/dev/null"]
    environment:
      RPC_URL: http://fullnode1:9000
      WS_URL: ws://fullnode1:9000
      TOOL_URL: http://tools:8080/tool/use
      LLM_ASSISTANT_URL: http://tools:8080/predict
    volumes:
      - shared:/app/shared
      - ../sui-network/genesis/static/sui.keystore:/app/sui.keystore:ro
      - ./bin/startup_events.py:/app/startup_events.py:ro
    restart: unless-stopped
    depends_on:
      build-suitools:
        condition: service_completed_successfully
      publish-package:
        condition: service_completed_successfully
      prepare-model:
        condition: service_completed_successfully
      tools:
        condition: service_started

  publish-package:
    image: sui-tools:${SUI_TAG}
    container_name: publish-package
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=error
      - SUI_CONFIG_DIR=/opt/sui/config
    volumes:
      - ../sui-network/genesis/files:/opt/sui/genesis
      - shared:/shared
      - ./bin/publish_package.sh:/opt/sui/publish_package.sh:ro
      - ../sui-network/genesis/static/client.yaml:/opt/sui/config/client.yaml:rw
      - ../sui-network/genesis/static/sui.keystore:/opt/sui/config/sui.keystore:ro
      - ../../onchain:/opt/sui/onchain
    command: ["bash", "/opt/sui/publish_package.sh"]
    restart: on-failure
    depends_on:
      build-suitools:
        condition: service_completed_successfully

  prepare-model:
    container_name: prepare-model
    build:
      context: "../../nexus_sdk/"
      dockerfile: "${PWD:-.}/nexus/Dockerfile"
      args:
        INSTALL_RUST: "true"
    environment:
      RPC_URL: http://fullnode1:9000
      WS_URL: ws://fullnode1:9000
      MODEL_URL: http://ollama:11434
    volumes:
      - ./bin/prepare_model.py:/app/prepare_model.py
      - shared:/app/shared
      - ../sui-network/genesis/static/sui.keystore:/app/sui.keystore:ro
    command: >
      bash -c "source .venv/bin/activate && python prepare_model.py"
    restart: on-failure
    depends_on:
      publish-package:
        condition: service_completed_successfully

  examples:
    container_name: examples
    build:
      context: "../../nexus_sdk/"
      dockerfile: "${PWD:-.}/nexus/Dockerfile"
      args:
        INSTALL_RUST: "true"
    environment:
      RPC_URL: http://fullnode1:9000
      WS_URL: ws://fullnode1:9000
    volumes:
      - ../../examples:/app/examples
      - shared:/app/shared
      - ../sui-network/genesis/static/sui.keystore:/app/sui.keystore:ro
    command: ["tail", "-f", "/dev/null"]
    restart: on-failure
    depends_on:
      publish-package:
        condition: service_completed_successfully
